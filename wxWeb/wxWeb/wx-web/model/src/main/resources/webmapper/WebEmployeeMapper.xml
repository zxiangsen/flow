<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.douya.webdao.WebEmployeeDao">
    <resultMap id="BaseResultMap" type="com.douya.model.Employee">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="userName" jdbcType="VARCHAR" property="userName" />
        <result column="createemployeeid" jdbcType="BIGINT" property="createemployeeid" />
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    </resultMap>
    <sql id="Base_Column_List">
        id AS "id",
        userName AS "userName",
        create_employeeid AS "createemployeeid",
        STR_TO_DATE(update_date,"%Y-%m-%d") AS updatedates,
        STR_TO_DATE(create_date,"%Y-%m-%d") AS createdates
    </sql>


    <select id="list"  resultType="java.util.Map">
        select
        <include refid="Base_Column_List" />
        from employee where  is_delete='N'
    </select>

    <insert id="addp" parameterType="Employee">
     insert into employee(id,name,phone,loginname,password,type,remarks,update_date,create_date,user_id,create_id,update_id,store_id,brand_id) values(#{id},#{name},#{phone},#{loginname},#{password},#{type},#{remarks},#{updateDate},#{createDate},#{userid},#{createid},#{updateid},#{storeid},#{brandid})
   </insert>


    <insert id="addadmission" parameterType="Employee">
     insert into employee(id,name,phone,loginname,password,type,remarks,update_date,create_date,user_id,create_id,update_id,store_id,brand_id) values(#{id},#{name},#{phone},#{loginname},#{password},#{type},#{remarks},#{updateDate},#{createDate},#{userid},#{createid},#{updateid},#{storeid},#{brandid})
   </insert>

    <update id="updatep" parameterType="Employee">
    update employee set name=#{name},phone=#{phone},type=#{type},brand_id = #{brandid},remarks=#{remarks},update_date=#{updateDate},loginname=#{loginname},update_id=#{updateid}
    where id=#{id}
    </update>

    <update id="updatezp" parameterType="Employee">
    update employee set name=#{name},phone=#{phone},type=#{type},remarks=#{remarks},update_date=#{updateDate},loginname=#{loginname},update_id=#{updateid}
    where id=#{id}
    </update>


    <update id="updatem" parameterType="Employee">
    update employee set name=#{name},phone=#{phone},type=#{type},remarks=#{remarks},update_date=#{updateDate},loginname=#{loginname},update_id=#{updateid}
    where id=#{id}
    </update>

    <update id="del" parameterType="java.util.Map">
        update  employee set is_delete ='Y',update_id=#{updateid} where id in
        <foreach  item="id" collection="ids" index="index"  open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="uppass" parameterType="java.util.Map">
        update  employee set password = #{password},update_id=#{updateid} where id in
        <foreach  item="id" collection="ids" index="index"  open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>


    <select id="query"  resultType="java.util.Map" parameterType="Employee">
        select
        <include refid="Base_Column_List" />
        from employee where  is_delete='N'
        <if test="name!=null and name !='' ">
            AND name LIKE
            concat('%',#{name},'%')
        </if>
        <if test="loginname!=null and loginname !='' ">
            AND loginname LIKE
            concat('%',#{loginname},'%')
        </if>
    </select>

    <!--  用户登录 -->
    <select id="login"  resultType="java.util.Map" parameterType="java.util.Map">
      select id,userName from employee where userName =#{userName}  and password =#{password}
        and is_delete ='N'
    </select>



    <!-- -->
    <select id="userlist" resultType="java.util.Map" parameterType="java.util.Map">
      select c.* from (
       select u.id,u.phone,u.code,u.identity,u.superiorid,u.money,u.create_date as createdate,
        STR_TO_DATE(u.create_date,"%Y-%m-%d") AS createtime,
         ifnull(STR_TO_DATE(u.approval_date,"%Y-%m-%d"),'--') AS approvaltime,
         case
         when u.identity ='0' then '普通用户'
         when u.identity ='1' then '普通VIP'
         when u.identity ='2' then '推广经理'
         when u.identity ='3' then '高级VIP'
         when u.identity ='4' then '推广总监'
         else '--'
         end identitytype,
         ifnull(u2.phone,'--') as superiorphone,
         ifnull(e.userName,'--') as approvalName
         from user u
         left join user u2 on u.superiorid = u2.id
         left join employee e on u.approvalId = e.id
        where u.is_delete ='N'
       AND u.phone LIKE concat('%',#{phone},'%')
       AND u.identity LIKE concat('%',#{identity},'%')
       order by u.approval_date desc)c limit #{pages},#{pagee}
    </select>

    <select id="userlists" resultType="java.util.Map" parameterType="java.util.Map">
       select id from user where is_delete ='N'
       AND phone LIKE concat('%',#{phone},'%')
       AND identity LIKE concat('%',#{identity},'%')
    </select>

    <select id="employeelist" resultType="java.util.Map" parameterType="java.util.Map">
      select c.* from (
       select e1.id,e1.userName,e1.create_employeeid,e1.create_date as createdate,
       STR_TO_DATE(e1.create_date,"%Y-%m-%d") AS createtime,
	   ifnull(e2.userName,'--') as createUsername
       from employee e1 left join employee e2
	    on e1.create_employeeid=e2.id
        where e1.is_delete ='N'
        AND e1.userName LIKE concat('%',#{userName},'%')
        order by e1.create_date desc)c limit #{pages},#{pagee}
    </select>

    <select id="employeelists" resultType="java.util.Map" parameterType="java.util.Map">
        select e1.id,e1.userName,e1.create_employeeid,e1.create_date as createdate,
        STR_TO_DATE(e1.create_date,"%Y-%m-%d") AS createtime,
	    ifnull(e2.userName,'--') as createUsername
        from employee e1 left join employee e2
	    on e1.create_employeeid=e2.id
	    where e1.is_delete ='N'
        AND e1.userName LIKE concat('%',#{userName},'%')

    </select>


    <insert id="addEmployee" parameterType="java.util.Map">
     insert into employee (id,userName,create_date,update_date,create_employeeid)
     values (#{id},#{userName},#{date},#{date},#{createEmployeeid})
    </insert>


    <select id="lean" resultType="java.util.Map" parameterType="String">
        select e1.id  from employee e1
	     where e1.is_delete ='N'
        AND e1.userName = #{userName}

    </select>

    <update id="delemployee" parameterType="java.util.Map">
      update employee set is_delete ='Y',delete_id =#{userId},delete_date =#{date} where id = #{id}
    </update>


    <select id="orderonelist" resultType="java.util.Map" parameterType="java.util.Map">
      select c.* from (
        select o1.id,o1.userId,o1.commodityid,o1.orderDate,o1.receivingType,
        ifnull(o1.contactName,'--')as contactName,ifnull(o1.contactPhone,'--')as contactPhone,
        ifnull(o1.contactAddress,'--')as contactAddress,
        STR_TO_DATE(o1.orderDate,"%Y-%m-%d") AS ordertime,
        case when o1.receivingType ='0' then '物流'
        when o1.receivingType ='1' then '自提' else '--' end receiving,
        u1.id as u1id,u1.phone,
        c.title,c.commodityMoney
        from orderone o1 left join user u1 on o1.userId = u1.id
        left join commodity c  on o1.commodityid = c.id
        where o1.orderStatus ='0'
        and o1.orderType ='0'
        and o1.is_delete ='N'
        AND u1.phone LIKE concat('%',#{phone},'%')
        AND o1.receivingType LIKE concat('%',#{receivingType},'%')
        order by o1.orderDate desc)c limit #{pages},#{pagee}
    </select>

    <select id="orderonelists" resultType="java.util.Map" parameterType="java.util.Map">
        select o1.id
        from orderone o1 left join user u1 on o1.userId = u1.id
        left join commodity c  on o1.commodityid = c.id
        where o1.orderStatus ='0'
        and o1.orderType ='0'
        and o1.is_delete ='N'
        AND u1.phone LIKE concat('%',#{phone},'%')
        AND o1.receivingType LIKE concat('%',#{receivingType},'%')
    </select>

    <update id="personalInformation" parameterType="java.util.Map">
      update orderone set orderStatus ='1',deliverId =#{userId},deliverDate =#{date} where id = #{id}
    </update>

    <select id="yiorderonelist" resultType="java.util.Map" parameterType="java.util.Map">
      select c.* from (
        select o1.id,o1.userId,o1.commodityid,o1.orderDate,o1.receivingType,
        ifnull(o1.contactName,'--')as contactName,ifnull(o1.contactPhone,'--')as contactPhone,
        ifnull(o1.contactAddress,'--')as contactAddress,
        STR_TO_DATE(o1.orderDate,"%Y-%m-%d") AS ordertime,
        STR_TO_DATE(o1.deliverDate,"%Y-%m-%d") AS delivertime,
        case when o1.receivingType ='0' then '物流'
        when o1.receivingType ='1' then '自提' else '--' end receiving,
        u1.id as u1id,u1.phone,
        c.title,c.commodityMoney,e.userName
        from orderone o1 left join user u1 on o1.userId = u1.id
        left join commodity c  on o1.commodityid = c.id
        left join employee e on o1.deliverId = e.id
        where o1.orderStatus ='1'
        and o1.orderType ='0'
        and o1.is_delete ='N'
        AND u1.phone LIKE concat('%',#{phone},'%')
        AND o1.receivingType LIKE concat('%',#{receivingType},'%')
        order by o1.deliverDate desc)c limit #{pages},#{pagee}
    </select>

    <select id="yiorderonelists" resultType="java.util.Map" parameterType="java.util.Map">
        select o1.id
        from orderone o1 left join user u1 on o1.userId = u1.id
        left join commodity c  on o1.commodityid = c.id
        where o1.orderStatus ='1'
        and o1.orderType ='0'
        and o1.is_delete ='N'
        AND u1.phone LIKE concat('%',#{phone},'%')
        AND o1.receivingType LIKE concat('%',#{receivingType},'%')
    </select>


    <select id="ymyClientlist" resultType="java.util.Map" parameterType="java.util.Map">
      select c.* from (
       select u.id,u.phone,u.code,u.identity,u.superiorid,u.money,u.create_date as createdate,
        STR_TO_DATE(u.create_date,"%Y-%m-%d") AS createtime,
        STR_TO_DATE(u.update_date,"%Y-%m-%d") AS updatetime,
          case
         when u.identity ='0' then '普通用户'
         when u.identity ='1' then '普通VIP'
         when u.identity ='2' then '推广经理'
         when u.identity ='3' then '高级VIP'
         when u.identity ='4' then '推广总监'
         else '--'
         end identitytype,
         ifnull(c.commodityMoney,'0') as commodityMoney,ifnull(u2.phone,'') as superiorphone
        from user u
        left join commodity c on u.commodityId = c.id
        left join user u2 on u.Superiorid = u2.id
        where u.is_delete ='N' and  u.userType ='1'
        AND u.phone LIKE concat('%',#{phone},'%')
        AND u.identity LIKE concat('%',#{identity},'%')
        order by u.update_date desc)c limit #{pages},#{pagee}
    </select>

    <select id="ymyClientlists" resultType="java.util.Map" parameterType="java.util.Map">
       select u.id from user u
       left join commodity c on u.commodityId = c.id
       where u.is_delete ='N' and  u.userType ='1'
       AND u.phone LIKE concat('%',#{phone},'%')
       AND u.identity LIKE concat('%',#{identity},'%')
    </select>


    <select id="userUpgradelean" resultType="java.util.Map" parameterType="String">
        select u.id,ifnull(u.identity,'0') as identity,ifnull(c.commodityMoney,'0') as money
         from user u
         left join commodity c on u.commodityId = c.id
         where u.id =#{id}
    </select>

    <select id="leancode" resultType="java.util.Map" parameterType="String">
        select id  from user where code =#{code}
     </select>


    <update id="userUpgradeone" parameterType="java.util.Map">
        update user set Qrcode =#{Qrcode},code =#{code},identity = #{identity},approvalId = #{userId},approval_date =#{date},userType ='0'
        where id =#{id}
    </update>

    <update id="userUpgradetwo" parameterType="java.util.Map">
        update user set identity = #{identity},approvalId = #{userId},approval_date =#{date},userType ='0'
        where id =#{id}
    </update>


    <select id="visitorNumlist" resultType="java.util.Map" parameterType="java.util.Map">
      select c.* from (
      select c.id,ifnull(c.money,'0') as money,
       STR_TO_DATE(c.create_date,"%Y-%m-%d") AS createtime,
       u.phone,u.identity,
       case
       when u.identity ='0' then '普通用户'
       when u.identity ='1' then '普通VIP'
       when u.identity ='2' then '推广经理'
       when u.identity ='3' then '高级VIP'
       when u.identity ='4' then '推广总监'
       else '--'
       end identitytype
       from cash c
       left join user u on c.user_id = u.id
       where c.type ='0'
       AND u.phone LIKE concat('%',#{phone},'%')
       AND u.identity LIKE concat('%',#{identity},'%')
       order by  c.create_date desc)c limit #{pages},#{pagee}
    </select>

    <select id="visitorNumlists" resultType="java.util.Map" parameterType="java.util.Map">
        select c.id
        from cash c
        left join user u on c.user_id = u.id
        where c.type ='0'
        AND u.phone LIKE concat('%',#{phone},'%')
        AND u.identity LIKE concat('%',#{identity},'%')
    </select>



    <select id="yivisitorNumlist" resultType="java.util.Map" parameterType="java.util.Map">
      select c.* from (
      select c.id,ifnull(c.money,'0') as money,
       date_format(c.create_date,"%Y-%m-%d %H:%i:%s") AS creatimes,
       date_format(c.approval_date,"%Y-%m-%d %H:%i:%s") AS approvaltimes,
       u.phone,u.identity,
       case
       when u.identity ='0' then '普通用户'
       when u.identity ='1' then '普通VIP'
       when u.identity ='2' then '推广经理'
       when u.identity ='3' then '高级VIP'
       when u.identity ='4' then '推广总监'
       else '--'
       end identitytype,
       ifnull(e.userName,'--') as userName
       from cash c
       left join user u on c.user_id = u.id
       left join employee e on c.approval_userid = e.id
       where c.type ='1'
       AND u.phone LIKE concat('%',#{phone},'%')
       AND u.identity LIKE concat('%',#{identity},'%')
       order by  c.approval_date desc)c limit #{pages},#{pagee}
    </select>

    <select id="yivisitorNumlists" resultType="java.util.Map" parameterType="java.util.Map">
        select c.id
        from cash c
        left join user u on c.user_id = u.id
        left join employee e on c.approval_userid = e.id
        where c.type ='1'
        AND u.phone LIKE concat('%',#{phone},'%')
        AND u.identity LIKE concat('%',#{identity},'%')
    </select>


    <update id="visitorNumation" parameterType="java.util.Map">
      update cash set type ='1',approval_userid =#{userId},approval_date =#{date} where id = #{id}
    </update>

    <select id="leanuserphone" resultType="java.util.Map" parameterType="String">
        select id from  user where is_delete ='N' and phone =#{phone}
    </select>

    <select id="leanusercode" resultType="java.util.Map" parameterType="String">
       select id,ifnull(Superiorid,'')AS superiorid,ifnull(Superiorids,'--')as superiorids from user where code =#{code} and is_delete ='N'
    </select>

    <insert id="adduser" parameterType="java.util.Map">
      insert into user(id,phone,password,portrait,Superiorid,Superiorids,create_date)
      values(#{id},#{phone},#{password},#{portrait},#{superiorid},#{superiorids},#{date})
    </insert>

    <select id="getuserpt" resultType="java.util.Map" parameterType="String">
        select u1.id,u1.phone,ifnull(u1.superiorid,'') as superiorid,ifnull(u1.superiorids,'') as superiorids,
        u2.id as u2id,u2.phone as u2phone,ifnull(u2.superiorid,'') as u2superiorid,ifnull(u2.identity,'0') as u2identity
        from user u1
       left join user u2 on u1.Superiorid = u2.id
       where u1.is_delete ='N' and u1.id = #{userId}
    </select>

    <select id="getusergj" resultType="java.util.Map" parameterType="String">
        select u1.id,u1.phone,ifnull(u1.superiorid,'') as superiorid,ifnull(u1.superiorids,'') as superiorids,
        u2.id as u2id,u2.phone as u2phone,ifnull(u2.identity,'0') as u2identity,ifnull(u2.superiorid,'') as u2superiorid,
        u3.id as u3id,u3.phone as u3phone,ifnull(u3.identity,'0') as u3identity
        from user u1
        left join user u2 on u1.Superiorid = u2.id
        left join user u3 on u2.Superiorid = u3.id
        where u1.is_delete ='N' and u1.id = #{userId}
    </select>

    <insert id="adduserMoney" parameterType="java.util.Map">
      insert into userMoney (id,userId,sourceId,type,money,createdate)
      values (#{id},#{userId},#{sourceId},#{type},#{money},#{date})
    </insert>


    <update id="updatemoneypt" parameterType="String">
        update user u set u.money = u.money+8 where u.id =#{userId}
    </update>

    <update id="updatemoneyjl" parameterType="String">
        update user u set u.money = u.money+2 where u.id =#{userId}
    </update>

    <update id="updatemoneygj" parameterType="String">
        update user u set u.money = u.money+80 where u.id =#{userId}
    </update>

    <update id="updatemoneyzj" parameterType="String">
        update user u set u.money = u.money+20 where u.id =#{userId}
    </update>

    <select id="panusertype" resultType="java.util.Map" parameterType="String">
        select id,identity from user where is_delete ='N' and identity ='2' or identity= '4' and id =#{userId}
    </select>


    <update id="updatuserjl" parameterType="String">
        update user u set u.identity ='2' where u.id =#{userId}
    </update>

    <update id="updatuserzj" parameterType="String">
        update user u set u.identity ='4' where u.id =#{userId}
    </update>

    <select id="getzspt" resultType="java.util.Map" parameterType="String">
        select id from user where is_delete ='N'
        and identity ='1' or identity ='2' or identity= '3' or identity= '4'
        and superiorid =#{userId}
    </select>

    <select id="getzszj" resultType="java.util.Map" parameterType="String">
        select id from user where is_delete ='N'
        and  identity= '3' or identity= '4'
        and superiorid =#{userId}
    </select>


    <select id="informationlist" resultType="java.util.Map" parameterType="java.util.Map">
      select c.* from (
      select t.id,t.picture,t.title,t.describe,t.number,t.sort,t.type,t.money,
        case
         when t.type ='0' then '普通用户'
         when t.type ='1' then '普通VIP'
         when t.type ='3' then '高级VIP'
         else '--'
         end typeName
         from task t
         where t.tasktype ='0'
         AND t.type LIKE concat('%',#{type},'%')
         AND t.title LIKE concat('%',#{title},'%')
         order by  t.sort)c limit #{pages},#{pagee}
    </select>

    <select id="informationlists" resultType="java.util.Map" parameterType="java.util.Map">
         select t.id
         from task t
         where t.tasktype ='0'
          AND t.type LIKE concat('%',#{type},'%')
          AND t.title LIKE concat('%',#{title},'%')
    </select>


    <update id="informationRelease" parameterType="String">
     update task set tasktype ='1' where id = #{id}
    </update>

    <update id="informationOffline" parameterType="String">
     update task set tasktype ='2' where id = #{id}
    </update>

    <update id="informationdel" parameterType="String">
     update task set tasktype ='3' where id = #{id}
    </update>


    <select id="yiReleaselist" resultType="java.util.Map" parameterType="java.util.Map">
      select c.* from (
      select t.id,t.picture,t.title,t.describe,t.number,t.sort,t.type,t.money,
        case
         when t.type ='0' then '普通用户'
         when t.type ='1' then '普通VIP'
         when t.type ='3' then '高级VIP'
         else '--'
         end typeName
         from task t
         where t.tasktype ='1'
         AND t.type LIKE concat('%',#{type},'%')
         AND t.title LIKE concat('%',#{title},'%')
         order by  t.sort)c limit #{pages},#{pagee}
    </select>

    <select id="yiReleaselists" resultType="java.util.Map" parameterType="java.util.Map">
         select t.id
         from task t
         where t.tasktype ='1'
          AND t.type LIKE concat('%',#{type},'%')
          AND t.title LIKE concat('%',#{title},'%')
    </select>


    <select id="yiOfflinelist" resultType="java.util.Map" parameterType="java.util.Map">
      select c.* from (
      select t.id,t.picture,t.title,t.describe,t.number,t.sort,t.type,t.money,
        case
         when t.type ='0' then '普通用户'
         when t.type ='1' then '普通VIP'
         when t.type ='3' then '高级VIP'
         else '--'
         end typeName
         from task t
         where t.tasktype ='2'
         AND t.type LIKE concat('%',#{type},'%')
         AND t.title LIKE concat('%',#{title},'%')
         order by  t.sort)c limit #{pages},#{pagee}
    </select>

    <select id="yiOfflinelists" resultType="java.util.Map" parameterType="java.util.Map">
         select t.id
         from task t
         where t.tasktype ='2'
          AND t.type LIKE concat('%',#{type},'%')
          AND t.title LIKE concat('%',#{title},'%')
    </select>

    <select id="commentManagementList" resultType="java.util.Map" parameterType="java.util.Map">
      select c.* from (
         select ut.id,ut.icon,ut.type,ut.createDate,
            date_format(ut.createDate,"%Y-%m-%d %H:%i:%s") AS createtimes,
            u.phone,u.identity,
            case
            when u.identity ='0' then '普通用户'
            when u.identity ='1' then '普通VIP'
            when u.identity ='2' then '推广经理'
            when u.identity ='3' then '高级VIP'
            when u.identity ='4' then '推广总监'
            else '--'
            end identityName,
            t.title,t.money as taskmoney,t.type as ttype,
            case
            when t.type ='0' then '普通用户'
            when t.type ='1' then '普通VIP'
            when t.type ='3' then '高级VIP'
            else '--'
            end typeName,
            t.tasktype as  tasktype,
            case
            when t.tasktype ='0' then '未发布'
            when t.tasktype ='1' then '已发布'
            when t.tasktype ='2' then '已下线'
            when t.tasktype ='2' then '已删除'
            else '--'
            end tasktypeName
            from userTask ut
            left join user u on ut.userId = u.id
            left join task t on ut.taskId = t.id
            where ut.type ='0'
            AND t.type LIKE concat('%',#{type},'%')
            AND t.title LIKE concat('%',#{title},'%')
            order by  ut.createDate desc)c limit #{pages},#{pagee}
    </select>

    <select id="commentManagementLists" resultType="java.util.Map" parameterType="java.util.Map">
            select ut.id
            from userTask ut
            left join user u on ut.userId = u.id
            left join task t on ut.taskId = t.id
            where ut.type ='0'
            AND t.type LIKE concat('%',#{type},'%')
            AND t.title LIKE concat('%',#{title},'%')
    </select>

    <update id="userTaskAdopt" parameterType="java.util.Map">
        update userTask set type ='1',appUserId =#{userId},appDate =#{date}
        where id = #{id}
    </update>

    <update id="userTaskReject" parameterType="java.util.Map">
        update userTask set type ='2',appUserId =#{userId},appDate =#{date}
        where id = #{id}
    </update>

    <select id="informationCollectionList" resultType="java.util.Map" parameterType="java.util.Map">
      select c.* from (
         select ut.id,ut.icon,ut.type,ut.createDate,
            date_format(ut.createDate,"%Y-%m-%d %H:%i:%s") AS createtimes,
            date_format(ut.appDate,"%Y-%m-%d %H:%i:%s") AS appTimes,
            ut.type  as uttype,
            case
            when ut.type ='0' then '未审核'
            when ut.type ='1' then '已通过'
            when ut.type ='2' then '已驳回'
            when ut.type ='3' then '已删除'
            else '--'
            end uttypeName,
            u.phone,u.identity,
            case
            when u.identity ='0' then '普通用户'
            when u.identity ='1' then '普通VIP'
            when u.identity ='2' then '推广经理'
            when u.identity ='3' then '高级VIP'
            when u.identity ='4' then '推广总监'
            else '--'
            end identityName,
            t.title,t.money as taskmoney,t.type as ttype,
            case
            when t.type ='0' then '普通用户'
            when t.type ='1' then '普通VIP'
            when t.type ='3' then '高级VIP'
            else '--'
            end typeName,
            t.tasktype as  tasktype,
            case
            when t.tasktype ='0' then '未发布'
            when t.tasktype ='1' then '已发布'
            when t.tasktype ='2' then '已下线'
            when t.tasktype ='2' then '已删除'
            else '--'
            end tasktypeName,
            e.userName as appName
            from userTask ut
            left join user u on ut.userId = u.id
            left join task t on ut.taskId = t.id
            left join employee e on ut.appUserId = e.id
            where ut.type in('1','2')
            AND t.type LIKE concat('%',#{type},'%')
            AND t.title LIKE concat('%',#{title},'%')
            order by  ut.appDate)c limit #{pages},#{pagee}
    </select>

    <select id="informationCollectionLists" resultType="java.util.Map" parameterType="java.util.Map">
            select ut.id
            from userTask ut
            left join user u on ut.userId = u.id
            left join task t on ut.taskId = t.id
            where ut.type in('1','2')
            AND t.type LIKE concat('%',#{type},'%')
            AND t.title LIKE concat('%',#{title},'%')
    </select>


    <select id="getuser" resultType="java.util.Map" parameterType="String">
      select ut.id,ut.userId,u.money,ut.taskId,t.id as tid,t.money as taskmoney from userTask ut
      left join user u on ut.userId = u.id
      left join task t on ut.taskId = t.id
      where ut.id =#{id}
    </select>


    <update id="usermoney" parameterType="java.util.Map">
      update user set money =#{money} where id = #{userId}
    </update>

    <insert id="addTask" parameterType="java.util.Map">
        insert into task(id,picture,title,`describe` ,number,sort,type,tasktype,money)
        values (#{id},#{picture},#{title},#{describe},#{number},#{sort},#{type},#{tasktype},#{money})
    </insert>


    <select id="commodityList" resultType="java.util.Map" parameterType="java.util.Map">
      select c.* from (
         select id,title,type,commodityIcon1,commodityIcon2,commodityIcon3,commodityIDetails,url,commodityMoney from commodity c
            order by  c.id)c limit #{pages},#{pagee}
    </select>

    <select id="commodityLists" resultType="java.util.Map" parameterType="java.util.Map">
           select id from commodity c
    </select>


    <select id="getcommoditys" resultType="java.util.Map" parameterType="String">
         select c.id,c.title,c.type,c.commodityIcon1,c.commodityIcon2,c.commodityIcon3,c.commodityIDetails,c.url,c.commodityMoney from commodity c
         where c.id = #{id}
    </select>

    <update id="updatecommodity" parameterType="java.util.Map">
       update commodity set title = #{title},url = #{url},commodityIcon1 = #{commodityIcon1},commodityIcon2 = #{commodityIcon2},
       commodityIcon3 = #{commodityIcon3},commodityIDetails = #{commodityIDetails}
       where id = #{id}
    </update>




  <select id="getguanli" resultType="java.util.Map" parameterType="String">
      select id,ifnull(superiorid,'') as superiorid,ifnull(superiorids,'') as superiorids
      from user where id = #{userId}
    </select>

    <update id="updatguanlipt" parameterType="String">
        update user u set u.money = u.money+0.2 where u.id =#{userId}
    </update>

    <update id="updatguanligj" parameterType="String">
        update user u set u.money = u.money+2 where u.id =#{userId}
    </update>


</mapper>